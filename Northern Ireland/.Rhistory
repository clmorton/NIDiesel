attach(IntegratedSpreadsheet)
library(readr)
dataset <- read_csv(NULL)
View(dataset)
library(readr)
IntegratedSpreadsheet <- read_csv("C:/Users/tracmo/OneDrive - University of Leeds/Projects/Spatial Analysis/MicroWind/Data/IntegratedSpreadsheet.csv")
View(IntegratedSpreadsheet)
attach(IS)
attach(IntegratedSpreadsheet)
hist(DomesticW)
library(car)
library(readr)
IS <- read_csv("C:/Users/tracmo/OneDrive - University of Leeds/Projects/Spatial Analysis/Low Carbon Vehicles/Car CO2 and NOx/England and Wales/MSOA/Integrated Spreadsheet MSOA.csv")
View(IS)
attach(IS)
mod1 <- lm(CO2 ~ Cage + Cengine + Cmass + PropDiesel)
summary(mod1)
par(mfrow=c(2,2))
plot(mod1, main = "CO2 Technical Model Diagnostics")
vif(mod1)
anova(mod1
anova(mod1)
install.packages("psyc")
mod2 <- lm(Nox ~ Cage + Cengine + Cmass + PropDiesel)
summary(mod2)
vif(mod2)
anova(mod1)
librar(psyc)
library(psyc)
install.packages("psych")
library(psych)
pairs.panels(Integrated.Spreadsheet_contigious[c(co2, Nox, Cage, Cengine, Cmass, PropDiesel)], method = "spearman", hist.col = "gray80", ellipses = "FALSE", breaks = 25)
pairs.panels(IS[c(co2, Nox, Cage, Cengine, Cmass, PropDiesel)], method = "spearman", hist.col = "gray80", ellipses = "FALSE", breaks = 25)
pairs.panels(IS[c(5:10)], method = "spearman", hist.col = "gray80", ellipses = "FALSE", breaks = 25)
pairs.panels(IS[c(50:55)], method = "spearman", hist.col = "gray80", ellipses = "FALSE", breaks = 25)
mod1 <- lm(CO2 ~ Cage + Cengine + Cmass + PropDiesel)
summary(mod1)
par(mfrow=c(2,2))
plot(mod1, main = "CO2 Technical Model Diagnostics")
vif(mod1)
anova(mod1)
mod2 <- lm(Nox ~ Cage + Cengine + Cmass + PropDiesel)
summary(mod2)
par(mfrow=c(2,2))
plot(mod2, main = "CO2 Technical Model Diagnostics")
vif(mod2)
anova(mod1)
mod1 <- lm(CO2 ~ Cage + Cengine + Cmass + PropDiesel)
summary(mod1)
par(mfrow=c(2,2))
plot(mod1, main = "CO2 Technical Model Diagnostics")
vif(mod1)
anova(mod1)
mod2 <- lm(Nox ~ Cage + Cengine + Cmass + PropDiesel)
summary(mod2)
par(mfrow=c(2,2))
plot(mod2, main = "CO2 Technical Model Diagnostics")
vif(mod2)
anova(mod1)
install.packages(plotly)
install.packages("plotly")
library(readr)
Integrated_Spreadsheet_Scotland_ <- read_csv("C:/Users/tracmo/OneDrive - University of Leeds/Projects/Spatial Analysis/CAFS/Data/Integrated Spreadsheet (Scotland).csv")
View(Integrated_Spreadsheet_Scotland_)
library(readr)
Integrated_Spreadsheet_Scotland_ <- read_csv("C:/Users/tracmo/OneDrive - University of Leeds/Projects/Spatial Analysis/CAFS/Data/Integrated Spreadsheet (Scotland).csv")
View(Integrated_Spreadsheet_Scotland_)
attach(Integrated_Spreadsheet_Scotland_)
plot(RegCars,MedianY)
plot(RegCars,Access_domain_2016_rank)
plot(RegCars,D2D_Alot)
library(readr)
Integrated_Spreadsheet_Scotland_ <- read_csv("C:/Users/tracmo/OneDrive - University of Leeds/Projects/Spatial Analysis/CAFS/Data/Integrated Spreadsheet (Scotland).csv")
View(Integrated_Spreadsheet_Scotland_)
attach(Integrated_Spreadsheet_Scotland_)
plot(RegCars,MedianY)
plot(MedianY, RegCars)
attach(Integrated_Spreadsheet)
library(readr)
Integrated_Spreadsheet <- read_csv("~/GitHub/NIDiesel/Northern Ireland/Data/Integrated Spreadsheet.csv")
View(Integrated_Spreadsheet)
attach(Integrated_Spreadsheet)
library(ggplot2)
ggplot(Integrated_Spreadsheet, aes(x=BuffCat, y=PropDiesel)) + geom_boxplot() theme(axis.text.x=element_text(angle=30, vjust=0.8, hjust=1, face="bold"))
ggbox <- ggplot(GOR.Comparison, aes(x=Region, y=PropDiesel)) + geom_boxplot(outlier.shape = NA)
ggbox <- ggbox + theme(axis.text.x=element_text(color = "black", angle=30, vjust=0.8, hjust=1))
ggbox <- ggbox + theme(axis.title.x=element_text(color = "black", face="bold"))
ggbox <- ggbox + theme(axis.title.y=element_text(color = "black", face="bold"))
ggbox <- ggbox + ylab("Percentage Diesel Cars") + xlab("Super Output Areas with Set Buffers to the Border with the Republic of Ireland")
ggbox
ggplot(Integrated_Spreadsheet, aes(x=BuffCat, y=PropDiesel)) + geom_boxplot() theme(axis.text.x=element_text(angle=30, vjust=0.8, hjust=1, face="bold"))
ggbox <- ggplot(Integrated_Spreadsheet, aes(x=BuffCat, y=PropDiesel)) + geom_boxplot(outlier.shape = NA)
ggbox <- ggbox + theme(axis.text.x=element_text(color = "black", angle=30, vjust=0.8, hjust=1))
ggbox <- ggbox + theme(axis.title.x=element_text(color = "black", face="bold"))
ggbox <- ggbox + theme(axis.title.y=element_text(color = "black", face="bold"))
ggbox <- ggbox + ylab("Percentage Diesel Cars") + xlab("Super Output Areas with Set Buffers to the Border with the Republic of Ireland")
ggbox
Integrated_Spreadsheet$BuffCat <- factor(Integrated_Spreadsheet$BuffCat, levels=c("Five", "Ten", "Fifteen", "Twenty", "Rest of NI"))
ggplot(Integrated_Spreadsheet, aes(x=Integrated_Spreadsheet$BuffCat, y=PropDiesel)) + geom_boxplot() theme(axis.text.x=element_text(angle=30, vjust=0.8, hjust=1, face="bold"))
ggbox <- ggplot(Integrated_Spreadsheet, aes(x=Integrated_Spreadsheet$BuffCat, y=PropDiesel)) + geom_boxplot(outlier.shape = NA)
ggbox <- ggbox + theme(axis.text.x=element_text(color = "black", angle=30, vjust=0.8, hjust=1))
ggbox <- ggbox + theme(axis.title.x=element_text(color = "black", face="bold"))
ggbox <- ggbox + theme(axis.title.y=element_text(color = "black", face="bold"))
ggbox <- ggbox + ylab("Percentage Diesel Cars") + xlab("Super Output Areas with Set Buffers to the Border with the Republic of Ireland")
ggbox
ggplot(Integrated_Spreadsheet, aes(x=NetTime, y=PropDiesel)) +
geom_point(shape=1) +
xlab("Network Time to to Closest Fuel Station in the Republic (minutes)") +
ylab("Diesel Cars (%)") +
theme(axis.title.y=element_text(color = "black", face="bold"))
geom_smooth(method=lm,
se=FALSE)
ggplot(Integrated_Spreadsheet, aes(x=NetTime, y=PropDiesel)) +
geom_point(shape=1) +
xlab("Network Time to to Closest Fuel Station in the Republic (minutes)") +
ylab("Diesel Cars (%)") +
theme(axis.title.y=element_text(color = "black", face="bold")) +
theme(axis.title.x=element_text(color = "black", face="bold"))
geom_smooth(method=lm,
se=FALSE)
ggplot(Integrated_Spreadsheet, aes(x=NetTime, y=PropDiesel)) +
geom_point(shape=1) +
xlab("Network Time to to Closest Fuel Station in the Republic (minutes)") +
ylab("Diesel Cars (%)") +
theme(axis.title.y=element_text(color = "black", face="bold")) +
theme(axis.title.x=element_text(color = "black", face="bold")) +
geom_smooth(method=lm,
se=FALSE)
ggplot(Integrated_Spreadsheet, aes(x=NetDist, y=PropDiesel)) +
geom_point(shape=1) +
xlab("Network Distance to Closest Fuel Station in the Republic (km)") +
ylab("Diesel Cars (%)") +
theme(axis.title.y=element_text(color = "black", face="bold")) +
theme(axis.title.x=element_text(color = "black", face="bold")) +
geom_smooth(method=lm,
se=FALSE)
kuskal.test(PropDiesel ~ BuffCat)
kruskal.test(PropDiesel ~ BuffCat)
kruskal.test(PropDiesel ~ BuffCat, data = Integrated_Spreadsheet)
install.packages("Hmisc")
library(Hmisc)
cor1 <- rcorr(as.matrix(Integrated_Spreadsheet[c(6:17)]))
cor1
cor1$r
cor2$p
cor1$p
cor1$P
install.packages("corrplot")
library(corrplot)
corrplot(cor1$r, type="upper", order="hclust",
p.mat = cor1$P, sig.level = 0.01, insig = "blank")
corrplot(cor1$r, type="upper", order="hclust",
p.mat = cor1$P, sig.level = 0.01, insig = "blank", tl.srt = 45)
corrplot(cor1$r, type="upper", order="hclust",
p.mat = cor1$P, sig.level = 0.01, insig = "blank", tl.srt = 45, tl.col = "black",)
corrplot(cor1$r, type="upper", order="hclust",
p.mat = cor1$P, sig.level = 0.01, insig = "blank", tl.srt = 45, tl.col = "black", order = "original")
corrplot(cor1$r, type="upper", order="hclust",
p.mat = cor1$P, sig.level = 0.01, insig = "blank", tl.srt = 45, tl.col = "black", order = "alphabet")
corrplot(cor1$r, type="upper", order="original",
p.mat = cor1$P, sig.level = 0.01, insig = "blank", tl.srt = 45, tl.col = "black")
cor1
corrplot(cor1$r, type="upper", order="original",
p.mat = cor1$P, sig.level = 0.01, insig = "blank", tl.srt = 45, tl.col = "black", addCoef.col = "grey")
cor2 <- rcorr(as.matrix(Integrated_Spreadsheet[c(6,18:29)]))
cor2
cor2$r
cor2$P
corrplot(cor2$r, type="upper", order="original",
p.mat = cor2$P, sig.level = 0.01, insig = "blank", tl.srt = 45, tl.col = "black")
cor3 <- rcorr(as.matrix(Integrated_Spreadsheet[c(6,30:39)]))
cor3
cor3$r
cor3$P
corrplot(cor3$r, type="upper", order="original",
p.mat = cor3$P, sig.level = 0.01, insig = "blank", tl.srt = 45, tl.col = "black")
ggplot(Integrated_Spreadsheet, aes(x=NetTime, y=PropDiesel)) +
geom_point(shape=1) +
xlab("Network Time to to Closest Fuel Station in the Republic (minutes)") +
ylab("Diesel Cars (%)") +
theme(axis.title.y=element_text(color = "black", face="bold")) +
theme(axis.title.x=element_text(color = "black", face="bold")) +
geom_smooth(method=lm,
se=FALSE)
str(Integrated_Spreadsheet)
describe(Integrated_Spreadsheet)
head(Integrated_Spreadsheet)
hist(log(PropDiesel), breaks = 25, xlab = "Mean Percentage Diesel Cars", main = NULL, font.lab = 2, col = "gray80")
Integrated_Spreadsheet$BuffCat <- factor(Integrated_Spreadsheet$BuffCat, levels=c("Five", "Ten", "Fifteen", "Twenty", "Rest of NI"))
ggplot(Integrated_Spreadsheet, aes(x=Integrated_Spreadsheet$BuffCat, y=PropDiesel)) + geom_boxplot() theme(axis.text.x=element_text(angle=30, vjust=0.8, hjust=1, face="bold"))
ggbox <- ggplot(Integrated_Spreadsheet, aes(x=Integrated_Spreadsheet$BuffCat, y=PropDiesel)) + geom_boxplot(outlier.shape = NA)
ggbox <- ggbox + theme(axis.text.x=element_text(color = "black", angle=30, vjust=0.8, hjust=1))
ggbox <- ggbox + theme(axis.title.x=element_text(color = "black", face="bold"))
ggbox <- ggbox + theme(axis.title.y=element_text(color = "black", face="bold"))
ggbox <- ggbox + ylab("Percentage Diesel Cars") + xlab("Super Output Areas with Set Buffers to the Border with the Republic of Ireland")
ggbox
library(readr)
Diesel_Share <- read_csv("~/GitHub/NIDiesel/Northern Ireland/Data/Diesel_Share.csv")
View(Diesel_Share)
attach(Diesel_Share)
library(ggplot2)
library(tidyr)
long <- gather(Diesel_Share, Diesel, Year,1990:2016)
long <- gather(Diesel_Share, Diesel, Year,1990,1991,1992)
long <- gather(Diesel_Share, Diesel, Year,1990, 1991, 1992)
long <- gather(Diesel_Share, Diesel, Year ,1990, 1991, 1992)
plot(Diesel_Share)
long <- gather(Diesel_Share, Diesel, Year,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016)
long <- gather(Diesel_Share, Diesel, Year,"1990","1991","1992","1993","1994","1995","1996","1997","1998","1999","2000","2001","2002","2003","2004","2005","2006","2007","2008","2009","2010","2011","2012","2013","2014","2015","2016")
long <- gather(Diesel_Share, Diesel, Year,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016)
long <- gather(Diesel_Share, Diesel, Year, c(2:28))
View(Diesel_Share)
View(long)
view(long)
View(long)
View(Diesel_Share)
View(Diesel_Share)
library(readr)
Diesel_Share <- read_csv("~/GitHub/NIDiesel/Northern Ireland/Data/Diesel_Share.csv")
View(Diesel_Share)
attach(Diesel_Share)
long <- gather(Diesel_Share, Diesel, Year, c(2:28))
View(long)
long <- gather(Diesel_Share, Year, Diesel, c(2:28))
View(long)
View(long)
library(readr)
Diesel_Share <- read_csv("~/GitHub/NIDiesel/Northern Ireland/Data/Diesel_Share.csv")
View(Diesel_Share)
attach(Diesel_Share)
long <- gather(Diesel_Share, Year, Diesel, c(2:28))
View(long)
p1 <- ggplot() + geom_line(aes(y = Diesel, x = Year, colour = Country), size=1.5,
data = long, stat="identity") +
ylab("Percentage of New Car Sales Diesel Fuelled") +
xlab("Year") +
theme(axis.title.y=element_text(color = "black", face="bold")) +
theme(axis.title.x=element_text(color = "black", face="bold")) +
theme(legend.position="bottom", legend.direction="horizontal", legend.title = element_blank())
p1
p1
Y
YEs
yES
plot(long)
p1
Y
No
N
p1 <- ggplot() + geom_line(aes(y = Diesel, x = Year, group = Country), size=1.5,
data = long, stat="identity") +
ylab("Percentage of New Car Sales Diesel Fuelled") +
xlab("Year") +
theme(axis.title.y=element_text(color = "black", face="bold")) +
theme(axis.title.x=element_text(color = "black", face="bold")) +
theme(legend.position="bottom", legend.direction="horizontal", legend.title = element_blank())
p1
p1 <- ggplot() + geom_line(aes(y = Diesel, x = Year, group = Country, colour = Country), size=1.5,
data = long, stat="identity") +
ylab("Percentage of New Car Sales Diesel Fuelled") +
xlab("Year") +
theme(axis.title.y=element_text(color = "black", face="bold")) +
theme(axis.title.x=element_text(color = "black", face="bold")) +
theme(legend.position="bottom", legend.direction="horizontal", legend.title = element_blank())
p1
p1 <- ggplot() + geom_line(aes(y = Diesel, x = Year, group = Country, colour = Country), size=1.5,
data = long, stat="identity") +
ylab("Percentage of New Car Sales Diesel Fuelled") +
xlab("Year") +
theme(axis.title.y=element_text(color = "black", face="bold")) +
theme(axis.title.x=element_text(color = "black", face="bold")) +
theme(legend.position="right", legend.direction="vertical", legend.title = element_blank())
p1
p1 <- ggplot() + geom_line(aes(y = Diesel, x = Year, group = Country, colour = Country), size=1.5,
data = long, stat="identity") +
geom_line(aes(linetype=Country), size=1) +
geom_point(aes(shape=Country, size=4))+
ylab("Percentage of New Car Sales Diesel Fuelled") +
xlab("Year") +
theme(axis.title.y=element_text(color = "black", face="bold")) +
theme(axis.title.x=element_text(color = "black", face="bold")) +
theme(legend.position="right", legend.direction="vertical", legend.title = element_blank())
p1
p1 <- ggplot() + geom_line(aes(y = Diesel, x = Year, group = Country, colour = Country), size=1.5,
data = long, stat="identity") +
geom_point(aes(shape=Country, size=4)) +
ylab("Percentage of New Car Sales Diesel Fuelled") +
xlab("Year") +
theme(axis.title.y=element_text(color = "black", face="bold")) +
theme(axis.title.x=element_text(color = "black", face="bold")) +
theme(legend.position="right", legend.direction="vertical", legend.title = element_blank())
p1
p1 <- ggplot() + geom_line(aes(y = Diesel, x = Year, group = Country, colour = Country), size=1.5,
data = long, stat="identity") +
geom_point(aes(y = Diesel, x = Year, shape=Country, size=4)) +
ylab("Percentage of New Car Sales Diesel Fuelled") +
xlab("Year") +
theme(axis.title.y=element_text(color = "black", face="bold")) +
theme(axis.title.x=element_text(color = "black", face="bold")) +
theme(legend.position="right", legend.direction="vertical", legend.title = element_blank())
p1
p1 <- ggplot() + geom_line(aes(y = Diesel, x = Year, group = Country, colour = Country), size=1.5,
data = long, stat="identity") +
geom_point(aes(y = Diesel, x = Year, data = long, shape=Country, size=4)) +
ylab("Percentage of New Car Sales Diesel Fuelled") +
xlab("Year") +
theme(axis.title.y=element_text(color = "black", face="bold")) +
theme(axis.title.x=element_text(color = "black", face="bold")) +
theme(legend.position="right", legend.direction="vertical", legend.title = element_blank())
p1
p1 <- ggplot() + geom_line(aes(y = Diesel, x = Year, group = Country, colour = Country), size=1.5,
p1 <- ggplot() + geom_line(aes(y = Diesel, x = Year, group = Country, colour = Country), size=1.5,
data = long, stat="identity") +
ylab("Percentage of New Car Sales Diesel Fuelled") +
xlab("Year") +
theme(axis.title.y=element_text(color = "black", face="bold")) +
theme(axis.title.x=element_text(color = "black", face="bold")) +
theme(legend.position="right", legend.direction="vertical", legend.title = element_blank())
p1
p1 <- ggplot() + geom_line(aes(y = Diesel, x = Year, group = Country, colour = Country), size=1.5,
data = long, stat="identity") +
ylab("Percentage of New Car Sales Diesel Fuelled") +
xlab("Year") +
theme(axis.title.y=element_text(color = "black", face="bold")) +
theme(axis.title.x=element_text(color = "black", face="bold")) +
theme(legend.position="right", legend.direction="vertical", legend.title = element_blank())
p1
p1 <- ggplot() + geom_line(aes(y = Diesel, x = Year, group = Country, colour = Country), size=1.5,
data = long, stat="identity", linetype = "County") +
ylab("Percentage of New Car Sales Diesel Fuelled") +
xlab("Year") +
theme(axis.title.y=element_text(color = "black", face="bold")) +
theme(axis.title.x=element_text(color = "black", face="bold")) +
theme(legend.position="right", legend.direction="vertical", legend.title = element_blank())
p1
p1 <- ggplot() + geom_line(aes(y = Diesel, x = Year, group = Country, colour = Country, linetype = "County"), size=1.5,
data = long, stat="identity") +
ylab("Percentage of New Car Sales Diesel Fuelled") +
xlab("Year") +
theme(axis.title.y=element_text(color = "black", face="bold")) +
theme(axis.title.x=element_text(color = "black", face="bold")) +
theme(legend.position="right", legend.direction="vertical", legend.title = element_blank())
p1
p1 <- ggplot() + geom_line(aes(y = Diesel, x = Year, group = Country, colour = Country, linetype = Country), size=1.5,
data = long, stat="identity") +
ylab("Percentage of New Car Sales Diesel Fuelled") +
xlab("Year") +
theme(axis.title.y=element_text(color = "black", face="bold")) +
theme(axis.title.x=element_text(color = "black", face="bold")) +
theme(legend.position="right", legend.direction="vertical", legend.title = element_blank())
p1
p1 <- ggplot() + geom_line(aes(y = Diesel, x = Year, group = Country, colour = Country), size=1.5,
data = long, stat="identity") +
ylab("Percentage of New Car Sales Diesel Fuelled") +
xlab("Year") +
theme(axis.title.y=element_text(color = "black", face="bold")) +
theme(axis.title.x=element_text(color = "black", face="bold")) +
theme(legend.position="right", legend.direction="vertical", legend.title = element_blank())
p1
p1 <- ggplot() + geom_line(aes(y = Diesel, x = Year, group = Country, colour = Country), size=1.5,
p1 <- ggplot() + geom_line(aes(y = Diesel, x = Year, group = Country, colour = Country), size=1.5,
data = long, stat="identity") +
geom_point(aes(y = Diesel, x = Year, group = Country, colour = Country), size=1.5) +
ylab("Percentage of New Car Sales Diesel Fuelled") +
xlab("Year") +
theme(axis.title.y=element_text(color = "black", face="bold")) +
theme(axis.title.x=element_text(color = "black", face="bold")) +
theme(legend.position="right", legend.direction="vertical", legend.title = element_blank())
p1
p1 <- ggplot() + geom_line(aes(y = Diesel, x = Year, group = Country, colour = Country), size=1.5,
data = long, stat="identity") +
geom_point(aes(y = Diesel, x = Year, group = Country, colour = Country), size=1.5) +
ylab("Percentage of New Car Sales Diesel Fuelled") +
xlab("Year") +
theme(axis.title.y=element_text(color = "black", face="bold")) +
theme(axis.title.x=element_text(color = "black", face="bold")) +
theme(legend.position="right", legend.direction="vertical", legend.title = element_blank())
p1
p1 <- ggplot() + geom_line(aes(y = Diesel, x = Year, group = Country, colour = Country), size=1.5,
data = long, stat="identity") +
geom_point(aes(y = Diesel, x = Year, group = Country, colour = Country, shape = Country), size=1.5, data = long, stat="identity") +
ylab("Percentage of New Car Sales Diesel Fuelled") +
xlab("Year") +
theme(axis.title.y=element_text(color = "black", face="bold")) +
theme(axis.title.x=element_text(color = "black", face="bold")) +
theme(legend.position="right", legend.direction="vertical", legend.title = element_blank())
p1
p1 <- ggplot() + geom_line(aes(y = Diesel, x = Year, group = Country, colour = Country), size=1.5,
data = long, stat="identity") +
geom_point(aes(y = Diesel, x = Year, group = Country, colour = Country, shape = Country), size=4, data = long, stat="identity") +
ylab("Percentage of New Car Sales Diesel Fuelled") +
xlab("Year") +
theme(axis.title.y=element_text(color = "black", face="bold")) +
theme(axis.title.x=element_text(color = "black", face="bold")) +
theme(legend.position="right", legend.direction="vertical", legend.title = element_blank())
p1
p1 <- ggplot() + geom_line(aes(y = Diesel, x = Year, group = Country, colour = Country), size=1.5,
data = long, stat="identity") +
ylab("Percentage of New Car Sales Diesel Fuelled") +
xlab("Year") +
theme(axis.title.y=element_text(color = "black", face="bold")) +
theme(axis.title.x=element_text(color = "black", face="bold")) +
theme(legend.position="right", legend.direction="vertical", legend.title = element_blank())
p1
library(spdep)
library(rgdal)
setwd("~/GitHub/NIDiesel/Northern Ireland")
SpatDat <- readOGR("Shapefiles","SOA2011_Linked")
continuity.nb <- poly2nb(SpatDat, queen = TRUE)
plot(SpatDat, border = "grey")
plot(continuity.nb, coordinates(SpatDat), add = TRUE, col = "blue")
continuity.listw <- nb2listw(continuity.nb)
summary(continuity.listw)
#Spatial Durbin Error Model
mod7SDEM <- errorsarlm(PropDiesLN ~ MeanAgeLN + SelfEmpLN + Level4LN + OneCarLN +
CarDrivLN + Over30LN + PopDLN + MeanResLN + RentSocLN + FlatsLN + NetDistLN,
data = SpatDat, continuity.listw, etype = "emixed")
summary(mod7SDEM)
#Spatial Durbin Error Model
mod7SDEM <- errorsarlm(PropDiesLN ~ MeanAgeLN + SelfEmpLN + Level4LN + OneCarLN +
CarDrivLN + Over30LN + PopDLN + MeanResLN + RentSocLN + FlatsLN + NetDistLN,
data = SpatDat, continuity.listw, etype = "emixed", emixedimps = "TRUE")
summary(mod7SDEM)
mod7SDEM <- errorsarlm(PropDiesLN ~ MeanAgeLN + SelfEmpLN + Level4LN + OneCarLN +
CarDrivLN + Over30LN + PopDLN + MeanResLN + RentSocLN + FlatsLN + NetDistLN,
data = SpatDat, continuity.listw, etype = "emixed", emixedimps = TRUE)
mod7SDEM <- errorsarlm(PropDiesLN ~ MeanAgeLN + SelfEmpLN + Level4LN + OneCarLN +
CarDrivLN + Over30LN + PopDLN + MeanResLN + RentSocLN + FlatsLN + NetDistLN,
data = SpatDat, continuity.listw, etype = "emixedimps")
mod7SDEM <- errorsarlm(PropDiesLN ~ MeanAgeLN + SelfEmpLN + Level4LN + OneCarLN +
CarDrivLN + Over30LN + PopDLN + MeanResLN + RentSocLN + FlatsLN + NetDistLN,
data = SpatDat, continuity.listw, etype = "emixed", emixedImps = "gmodels::estimable")
mod7SDEM <- errorsarlm(PropDiesLN ~ MeanAgeLN + SelfEmpLN + Level4LN + OneCarLN +
CarDrivLN + Over30LN + PopDLN + MeanResLN + RentSocLN + FlatsLN + NetDistLN,
data = SpatDat, continuity.listw, etype = "emixed", emixedImps = emixedImps)
mod7SDEM <- errorsarlm(PropDiesLN ~ MeanAgeLN + SelfEmpLN + Level4LN + OneCarLN +
CarDrivLN + Over30LN + PopDLN + MeanResLN + RentSocLN + FlatsLN + NetDistLN,
data = SpatDat, continuity.listw, etype = "emixed", emixedImps = "emixedImps")
emixedImps <- list(dirImps=dirImps, indirImps=indirImps,
totImps=totImps)
emixedImps <- NULL
if (etype == "emixed") {
odd <- (m%/%2) > 0
if (odd) {
m2 <- (m-1)/2
} else {
m2 <- m/2
}
if (K == 1 && odd) {
warning("model configuration issue: no total impacts")
} else {
cm <- matrix(0, ncol=m, nrow=m2)
if (K == 2) {
if (odd) {
rownames(cm) <- xxcolnames[2:(m2+1)]
} else {
rownames(cm) <- xxcolnames[1:m2]
}
for (i in 1:m2) cm[i, c(i+1, i+(m2+1))] <- 1
# drop bug fix 2016-09-21 Philipp Hunziker
dirImps <- sum_lm_target$coefficients[2:(m2+1), 1:2, drop=FALSE]
rownames(dirImps) <- rownames(cm)
indirImps <- sum_lm_target$coefficients[(m2+2):m, 1:2, drop=FALSE]
rownames(indirImps) <- rownames(cm)
} else {
rownames(cm) <- xxcolnames[1:m2]
for (i in 1:m2) cm[i, c(i, i+m2)] <- 1
dirImps <- sum_lm_target$coefficients[1:m2, 1:2, drop=FALSE]
rownames(dirImps) <- rownames(cm)
indirImps <- sum_lm_target$coefficients[(m2+1):m, 1:2, drop=FALSE]
rownames(indirImps) <- rownames(cm)
}
}
totImps <- as.matrix(estimable(lm.target, cm)[, 1:2, drop=FALSE])
emixedImps <- list(dirImps=dirImps, indirImps=indirImps,
mod7SDEM <- errorsarlm(PropDiesLN ~ MeanAgeLN + SelfEmpLN + Level4LN + OneCarLN +
CarDrivLN + Over30LN + PopDLN + MeanResLN + RentSocLN + FlatsLN + NetDistLN,
data = SpatDat, continuity.listw, etype = "emixed", emixedImps = TRUE)
summary(mod7SDEM)
emixedImps(mod7SDEM)
summary(mod7SDEM)
lmSLX(mod7SDEM)
summary(impacts(mod7SDEM))
summary(impacts(mod7SDEM, list = continuity.listw))
mod7SDM <- lagsarlm(PropDiesLN ~ MeanAgeLN + SelfEmpLN + Level4LN + OneCarLN +
CarDrivLN + Over30LN + PopDLN + MeanResLN + RentSocLN + FlatsLN + NetDistLN,
data = SpatDat, continuity.listw, type = "mixed")
summary(impacts(mod7SDM))
summary(mod7SDM)
summary(impacts(mod7SDM, list = continuity.listw))
summary(impacts(mod7SDM, listw = continuity.listw))
impacts(mod7SDM, listw = continuity.listw)
W <- as(continuity.listw, "CsparseMatrix")
trMatc <- trW(W, type="mult")
trMC <- trW(W, type="MC")
set.seed(1)
impacts(mod7SDM, listw = continuity.listw)
impacts(mod7SDM, tr = trMatc)
impacts(mod7SDM, tr = trMC)
summary(impacts(mod7SDM, tr=trMatc, R=200), zstats=TRUE)
summary(impacts(mod7SDM, listw = continuity.listw), zstats=TRUE)
summary(impacts(mod7SDM, tr=trMatc, R=200), zstats=TRUE, short = TRUE)
summary(impacts(mod7SDEM))
summary(mod7SDEM)
summary(impacts(mod7SDEM))
